from django.db import models


# Create your models here.

# commentary model
class Commentary(models.Model):
    content = models.TextField()
    created_at = models.CharField(max_length=255)
    game = models.ForeignKey('user.Session', on_delete=models.CASCADE)

# data model
class Data(models.Model):
    content = models.TextField()
    series = models.CharField(max_length=50, null=True)
    session = models.CharField(max_length=50, null=True)
    DataWithheld = models.CharField(max_length=50, null=True)
    Number = models.IntegerField(null=True)
    positionShow = models.IntegerField(null=True)
    positionValue = models.IntegerField(null=True)
    statusRetired = models.IntegerField(null=True)
    statusInPit = models.IntegerField(null=True)
    statusPitOut = models.IntegerField(null=True)
    statusStopped = models.IntegerField(null=True)
    statusts = models.CharField(max_length=100, null=True)
    RacingNumber = models.IntegerField(null=True)
    FullName = models.CharField(max_length=50, null=True)
    BroadcastName = models.CharField(max_length=50, null=True)
    TLA = models.CharField(max_length=50, null=True)
    gap = models.CharField(max_length=50, null=True)
    interval = models.CharField(max_length=50, null=True)
    laps = models.CharField(max_length=50, null=True)
    pits = models.CharField(max_length=50, null=True)
    OverallFastest0 = models.IntegerField(null=True)
    PersonalFastest0 = models.IntegerField(null=True)
    Stopped0 = models.IntegerField(null=True)
    Id0 = models.IntegerField(null=True)
    Value0 = models.CharField(max_length=50, null=True)
    OverallFastest1 = models.IntegerField(null=True)
    PersonalFastest1 = models.IntegerField(null=True)
    Stopped1 = models.IntegerField(null=True)
    Id1 = models.IntegerField(null=True)
    Value1 = models.CharField(max_length=50, null=True)
    OverallFastest2 = models.IntegerField(null=True)
    PersonalFastest2 = models.IntegerField(null=True)
    Stopped2 = models.IntegerField(null=True)
    Id2 = models.IntegerField(null=True)
    Value2 = models.CharField(max_length=50, null=True)
    lastOverallFastest = models.IntegerField(null=True)
    lastPersonalFastest = models.IntegerField(null=True)
    lastValue = models.CharField(max_length=50, null=True)
    bestLap = models.IntegerField(null=True)
    bestValue = models.CharField(max_length=50, null=True)
    created_at = models.CharField(max_length=255)
    is_process = models.SmallIntegerField(default=0)
    game = models.ForeignKey('user.Session', on_delete=models.CASCADE)

# score model
class Score(models.Model):
    RacingNumber = models.SmallIntegerField(null=True)
    laps = models.SmallIntegerField(null=True)
    positionValue = models.SmallIntegerField(null=True)
    gap = models.CharField(max_length=50, null=True)
    interval = models.CharField(max_length=50, null=True)
    bestLap = models.SmallIntegerField(null=True)
    bestValue = models.CharField(max_length=50, null=True)
    sector1 = models.CharField(max_length=50, null=True)
    sector2 = models.CharField(max_length=50, null=True)
    sector3 = models.CharField(max_length=50, null=True)
    lastValue = models.CharField(max_length=50, null=True)
    pits = models.SmallIntegerField(null=True)
    statusRetired = models.SmallIntegerField(null=True)
    statusInPit = models.SmallIntegerField(null=True)
    statusPitOut = models.SmallIntegerField(null=True)
    statusStopped = models.SmallIntegerField(null=True)
    created_at = models.CharField(max_length=255)
    game = models.ForeignKey('user.Session', on_delete=models.CASCADE)

# stat model
class Stat(models.Model):
    Number = models.IntegerField(null=True)
    RacingNumber = models.IntegerField(null=True)
    PersonalBestLap = models.IntegerField(null=True)
    PersonalBestLapPosition = models.IntegerField(null=True)
    PersonalBestLapValue = models.CharField(max_length=50, null=True)
    BestSectorsPosition0 = models.IntegerField(null=True)
    BestSectorsId0 = models.IntegerField(null=True)
    BestSectorsValue0 = models.CharField(max_length=50, null=True)
    BestSectorsPosition1 = models.IntegerField(null=True)
    BestSectorsId1 = models.IntegerField(null=True)
    BestSectorsValue1 = models.CharField(max_length=50, null=True)
    BestSectorsPosition2 = models.IntegerField(null=True)
    BestSectorsId2 = models.IntegerField(null=True)
    BestSectorsValue2 = models.CharField(max_length=50, null=True)
    BestSpeedsPosition0 = models.IntegerField(null=True)
    BestSpeedsId0 = models.CharField(max_length=50, null=True)
    BestSpeedsValue0 = models.CharField(max_length=50, null=True)
    BestSpeedsPosition1 = models.IntegerField(null=True)
    BestSpeedsId1 = models.CharField(max_length=50, null=True)
    BestSpeedsValue1 = models.CharField(max_length=50, null=True)
    BestSpeedsPosition2 = models.IntegerField(null=True)
    BestSpeedsId2 = models.CharField(max_length=50, null=True)
    BestSpeedsValue2 = models.CharField(max_length=50, null=True)
    BestSpeedsPosition3 = models.IntegerField(null=True)
    BestSpeedsId3 = models.CharField(max_length=50, null=True)
    BestSpeedsValue3 = models.CharField(max_length=50, null=True)
    created_at = models.CharField(max_length=255)
    game = models.ForeignKey('user.Session', on_delete=models.CASCADE)

# status model
class StatusModel(models.Model):
    sessionTime = models.CharField(max_length=50, null=True)
    sessionValue = models.TextField(null=True)
    trackTime = models.CharField(max_length=50, null=True)
    trackValue = models.TextField(null=True)
    created_at = models.CharField(max_length=255)
    game = models.ForeignKey('user.Session', on_delete=models.CASCADE)

# time model
class Time(models.Model):
    epoc = models.CharField(max_length=50, null=True)
    running = models.CharField(max_length=50, null=True)
    remaining = models.CharField(max_length=100, null=True)
    created_at = models.CharField(max_length=255)
    game = models.ForeignKey('user.Session', on_delete=models.CASCADE)

# weather model
class Weather(models.Model):
    airtempTime = models.CharField(max_length=50, null=True)
    airtemp = models.CharField(max_length=50, null=True)
    humidityTime = models.CharField(max_length=50, null=True)
    humidity = models.CharField(max_length=50, null=True)
    pressureTime = models.CharField(max_length=50, null=True)
    pressure = models.CharField(max_length=50, null=True)
    rainfallTime = models.CharField(max_length=50, null=True)
    rainfall = models.CharField(max_length=50, null=True)
    tracktempTime = models.CharField(max_length=50, null=True)
    tracktemp = models.CharField(max_length=50, null=True)
    windspeedTime = models.CharField(max_length=50, null=True)
    windspeed = models.CharField(max_length=50, null=True)
    winddirTime = models.CharField(max_length=50, null=True)
    winddir = models.CharField(max_length=50, null=True)
    windclock = models.CharField(max_length=50, null=True)
    created_at = models.CharField(max_length=255)
    game = models.ForeignKey('user.Session', on_delete=models.CASCADE)